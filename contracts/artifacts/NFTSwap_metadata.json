{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bidId",
						"type": "uint256"
					}
				],
				"name": "acceptBid",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "bids",
				"outputs": [
					{
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "proposalRef",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC721",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "indexInProposal",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bidsCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "bidsGaps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "bidId",
						"type": "uint256"
					}
				],
				"name": "deleteBid",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					}
				],
				"name": "deleteProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "proposalId",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getBidFromProposal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "bidRef",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					}
				],
				"name": "getBidsFromProposal",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "bidsRef",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC721",
						"name": "bidNftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "bidNftTokenId",
						"type": "uint256"
					}
				],
				"name": "makeBid",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC721",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "makeProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "proposals",
				"outputs": [
					{
						"internalType": "address",
						"name": "proposer",
						"type": "address"
					},
					{
						"internalType": "contract IERC721",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "proposalsCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "proposalsGaps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bidId",
						"type": "uint256"
					}
				],
				"name": "refuseBid",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"refuseBid(uint256,uint256)": {
					"notice": "function acceptBid(uint8 proposalId, uint256 bidIndex) external { address proposerAddress = msg.sender; require( proposals[proposerAddress][proposalId].nftAddress != IERC721(address(0x0)), \"Specified proposal does not exist\" ); require( proposals[proposerAddress][proposalId].bidsRef[bidIndex].bidderAddress != address(0x0), \"Specified bid does not exist\" ); BidIdentifier memory bidIdentifier = proposals[proposerAddress][proposalId].bidsRef[bidIndex]; IERC721 nftAddress1 = proposals[proposerAddress][proposalId].nftAddress; uint256 tokenId1 = proposals[proposerAddress][proposalId].tokenId; IERC721 nftAddress2 = bids[bidIdentifier.bidderAddress][bidIdentifier.bidId].nftAddress; uint256 tokenId2 = bids[bidIdentifier.bidderAddress][bidIdentifier.bidId].tokenId; if(nftAddress1.ownerOf(tokenId1) != proposerAddress) { deleteProposal(proposerAddress, proposalId); revert(\"You do not own the nft anymore\"); } if(nftAddress1.getApproved(tokenId1) != address(this)) { deleteProposal(proposerAddress, proposalId); revert(\"You removed approval for the nft to this contract, please re-approve it\"); } address bidderAddress = bidIdentifier.bidderAddress; uint8 bidId = bidIdentifier.bidId; if(nftAddress2.ownerOf(tokenId2) != bidderAddress) { deleteBid(bidderAddress, bidId); revert(\"The bidder does not own the nft anymore\"); } if(nftAddress2.getApproved(tokenId2) != address(this)) { deleteBid(bidderAddress, bidId); revert(\"The bidder removed approval for the bidded nft to this contract. Impossible to complete the swap until the bidder re-approves the nft\"); } nftAddress1.safeTransferFrom(proposerAddress, bidIdentifier.bidderAddress, tokenId1); nftAddress2.safeTransferFrom(bidIdentifier.bidderAddress, proposerAddress, tokenId2); deleteProposal(proposerAddress, proposalId); }"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/NFTSwap.sol": "NFTSwap"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
			"license": "MIT",
			"urls": [
				"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
				"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"contracts/NFTSwap.sol": {
			"keccak256": "0x10801c3d1fef99c7b4cb9fa5f35dcc150a022d899ce31eafb09d4fe5a4c64c75",
			"urls": [
				"bzz-raw://a44839d9f3c638b711c4cbb2dda132613ae302a9f91d254be1d3e9499b7fe19f",
				"dweb:/ipfs/QmbbCdYmYg2xVNnki1txkJDgDTX8ynNs5xummL9w4oW7eD"
			]
		}
	},
	"version": 1
}